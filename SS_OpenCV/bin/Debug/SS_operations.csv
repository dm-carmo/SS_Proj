1;Negative;Negative;void Negative(Image<Bgr, byte> img)
2;BrightContrast;Brightness & Contrast;void BrightContrast(Image<Bgr, byte> img, int bright, double contrast)
3;RedChannel;Red Channel;void RedChannel(Image<Bgr, byte> img)
4;Translation;Translation (Dx,Dy) =(-10 , -10);void Translation(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, int dx, int dy)
5;Rotation;Rotation - 30º;void Rotation(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float angle)
6;Scale;Scale 0.5x;void Scale(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float scaleFactor)
7;Scale_point_xy;Scale 2.2x on point (x,y) = (250,310);void Scale_point_xy(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float scaleFactor,int centerX, int centerY)
8;Mean;Mean 3x3 - solution A;void Mean(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy)
9;NonUniform;Non uniform matrix filter;void NonUniform(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float[,] matrix, float matrixWeight)
10;Sobel;Sobel 3x3 filter;void Sobel(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy)
11;Diferentiation;Diferentiation filter;void Diferentiation(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy)
12;Median;Median 3D filter;void Median(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy)
13;Histogram_Gray;Compute just image Gray histogram;int[] Histogram_Gray(Emgu.CV.Image<Bgr, byte> img)
14;Histogram_RGB;Compute just image RGB histogram;int[,] Histogram_RGB(Emgu.CV.Image<Bgr, byte> img)
15;Histogram_All;Compute image Gray and RGB histogram;int[,] Histogram_All(Emgu.CV.Image<Bgr, byte> img)
16;ConvertToBW;Binarization with fixed value 157;void ConvertToBW(Emgu.CV.Image<Bgr, byte> img, int threshold)
17;ConvertToBW_Otsu;Binarization with Otsu Method;void ConvertToBW_Otsu(Emgu.CV.Image<Bgr, byte> img)
18;Mean_solutionB;Mean 3x3 - solution B;void Mean_solutionB(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy)
19;Mean_solutionC;Mean - solution C with 7x7 filter;void Mean_solutionC(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, int size)
20;Roberts;Roberts filter;void Roberts(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy)
40;LP_Recognition;Full License plate recognition;public static void LP_Recognition(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, out Rectangle LP_Location,out Rectangle LP_Chr1,out Rectangle LP_Chr2,out Rectangle LP_Chr3,out Rectangle LP_Chr4,out Rectangle LP_Chr5,out Rectangle LP_Chr6,out string LP_C1,out string LP_C2,out string LP_C3,out string LP_C4,out string LP_C5,out string LP_C6,out string LP_Country,out string LP_Month,out string LP_Year)
51;Rotation_Bilinear;Rotation - 30º with Bilinear Interpolation;void Rotation_Bilinear(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float angle)
61;Scale_Bilinear;Scale 0.5x with Bilinear Interpolation;void Scale_Bilinear(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float scaleFactor)
71;Scale_point_xy_Bilinear;Scale 2.2x on point (x,y) = (250,310) with Bilinear Interpolation;void Scale_point_xy_Bilinear(Image<Bgr, byte> img, Image<Bgr, byte> imgCopy, float scaleFactor,int centerX, int centerY)
